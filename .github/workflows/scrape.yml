name: Scrape Lightning Strikes

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:  # Manual trigger

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install selenium matplotlib cartopy
          sudo apt-get update
          sudo apt-get install -y libgeos-dev  # For cartopy
      - name: Install Chrome and ChromeDriver
        run: |
          # Install Chrome
          wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
          echo "deb http://dl.google.com/linux/chrome/deb/ stable main" | sudo tee /etc/apt/sources.list.d/google-chrome.list
          sudo apt-get update
          sudo apt-get install -y google-chrome-stable
          
          # Get full Chrome version and major version
          FULL_CHROME_VERSION=$(google-chrome --version | grep -oE "[0-9]+\.[0-9]+\.[0-9]+")
          CHROME_MAJOR_VERSION=$(echo "$FULL_CHROME_VERSION" | cut -d'.' -f1)
          echo "Full Chrome version: $FULL_CHROME_VERSION"
          echo "Chrome major version: $CHROME_MAJOR_VERSION"
          
          # Remove any existing ChromeDriver
          sudo rm -f /usr/local/bin/chromedriver
          
          # Attempt to fetch latest ChromeDriver for major version
          DRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/LATEST_RELEASE_${CHROME_MAJOR_VERSION}")
          echo "Fetched DRIVER_VERSION from LATEST_RELEASE_${CHROME_MAJOR_VERSION}: $DRIVER_VERSION"
          
          # Validate DRIVER_VERSION
          if [ -z "$DRIVER_VERSION" ] || echo "$DRIVER_VERSION" | grep -q "404" || ! echo "$DRIVER_VERSION" | grep -q "^${CHROME_MAJOR_VERSION}"; then
            echo "Invalid or mismatched DRIVER_VERSION. Forcing a known 134.x version."
            DRIVER_VERSION="134.0.6998.35"  # Known compatible version as of March 2025
          fi
          echo "Selected ChromeDriver version: $DRIVER_VERSION"
          
          # Download and install ChromeDriver
          echo "Downloading ChromeDriver from: https://storage.googleapis.com/chrome-for-testing-public/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip"
          wget -q "https://storage.googleapis.com/chrome-for-testing-public/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip" || {
            echo "Download failed for $DRIVER_VERSION. Trying fallback version 134.0.6998.35."
            DRIVER_VERSION="134.0.6998.35"
            wget -q "https://storage.googleapis.com/chrome-for-testing-public/${DRIVER_VERSION}/linux64/chromedriver-linux64.zip" || {
              echo "Error: Failed to download ChromeDriver for both attempts."
              exit 1
            }
          }
          unzip chromedriver-linux64.zip
          sudo mv chromedriver-linux64/chromedriver /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
          
          # Verify versions
          INSTALLED_DRIVER_VERSION=$(chromedriver --version | grep -oE "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+")
          echo "Installed ChromeDriver version: $INSTALLED_DRIVER_VERSION"
          if ! echo "$INSTALLED_DRIVER_VERSION" | grep -q "^${CHROME_MAJOR_VERSION}"; then
            echo "Error: ChromeDriver version ($INSTALLED_DRIVER_VERSION) does not match Chrome major version ($CHROME_MAJOR_VERSION)"
            exit 1
          fi
          echo "Chrome and ChromeDriver versions are compatible."
      - name: Run scraping script
        run: python scrape_and_plot.py
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add strikes.json australia_lightning_24h.png
          git commit -m "Update strikes and PNG" || echo "No changes to commit"
          git push
